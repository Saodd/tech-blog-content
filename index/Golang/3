{"blogs":[{"Title":"LeetCode[12]: 整数转罗马数字","Date":"2019-08-02","Brev":"中等难度。其实题目很简单，但是如何优化字符串性能是得分的关键。","Tags":["算法与数据结构","Golang","优化"]},{"Title":"GoTour后续练习题之 通过通信共享内存","Date":"2019-06-20","Brev":"Goruntine 和 channel 应该算是Golang语言的灵魂法宝了吧。看完这一篇代码，我对他们又有了新的认识。","Tags":["Golang"]},{"Title":"GoTour后续练习题之 马尔可夫链算法 markov","Date":"2019-06-19","Brev":"这次学习的是《Codewalk: 生成任意文本：一个马尔可夫链算法》，但是示例是对英文的实现，而中文与英文很重要的区别就是，中文不以空格分割单词。所以我们来写一个中文版的。","Tags":["Golang"]},{"Title":"GoTour后续练习题之 掷骰子游戏 Pig","Date":"2019-06-19","Brev":"在Gotour的后续页面中，我们进入的是《Codewalk: Go中的一等函数（First Class Functions in Go）》。简单查看代码之后，发现这个游戏纯粹是电脑左右跟右手玩，我们人类玩家只是看个结果而已。凭什么呀！我也想玩！","Tags":["Golang"]},{"Title":"GoTour后续练习题之 Web爬虫 exercise-web-crawler.go","Date":"2019-06-15","Brev":"Go-Tour的最后一个练习题(https://tour.golang.org/concurrency/10)，感觉稍微有点点难度，在这里把解题思路和参考答案分享一下。","Tags":["Golang"]},{"Title":"Golang实现二叉堆优先队列","Date":"2019-06-08","Brev":"排序算法之二叉堆。用于频繁插入或者删除元素，又要保持数组有序的情况。","Tags":["Golang","算法与数据结构"]},{"Title":"Golang与Python性能差距初探","Date":"2019-05-22","Brev":"在学习的时候的确能感受到Golang运行时的清爽感，但是到底有多强还没有定量地分析一下。之前看过大佬的帖子，大概的性能差距应该是10-50倍这个数量级吧","Tags":["Golang","Python"]}],"total":27}