{"blogs":[{"title":"Celery源码速读","date":"2020-06-22","brev":"【弃坑】Celery是python世界中最主流的异步任务框架。","tags":["Python","源码"],"path":"blog/2020/200622-Celery源码速读.md"},{"title":"Flask框架源代码速读","date":"2020-06-14","brev":"Flask作为python世界的三大web框架之一，其轻量简单易拓展的特性使其保有了持久的生命力。它同时也是我目前项目的主要框架。快速阅读了解一下其主要内部实现吧。","tags":["Python","源码"],"path":"blog/2020/200614-Flask框架源代码速读.md"},{"title":"Python面向对象编程","date":"2019-11-03","brev":"在面向对象领域还是有不少坑的，成员变量、魔法方法本身并不难，但是与继承结合在一起，就有很多细节需要关注了。在此做个基本的盘点和分析。","tags":["Python"],"path":"blog/2019/191103-Python面向对象编程.md"},{"title":"实战项目：价格监视程序","date":"2019-09-17","brev":"调用外部REST获取数据，用钉钉推送消息，本地使用Redis保存配置，提供REST接口来修改配置。一个工作日内全部搞定。","tags":["Golang","Python"],"path":"blog/2019/190917-实战项目-价格监视程序.md"},{"title":"用正则从邮件中解析数据","date":"2019-09-16","brev":"使用正则与协程，高效地解析邮件。","tags":["Python"],"path":"blog/2019/190916-用正则从邮件中解析数据.md"},{"title":"从邮箱中下载邮件（进阶版）","date":"2019-09-10","brev":"开发电子邮件解析工具时，有个很大的麻烦是下载问题。这里提供一个新的思路，将邮件下载下来，保存到本地的某个地方（Mongo）；然后从本地读出来，再进行解析。","tags":["Python"],"path":"blog/2019/190910-从邮箱中下载邮件.md"},{"title":"Python协程用法","date":"2019-08-28","brev":"协程是Python中比较花哨的一种用法。除了用于异步，还可以用于一些稍微简单的、需要保存函数运行状态的场景。","tags":["Python"],"path":"blog/2019/190828-Python协程运用.md"},{"title":"Python异步IO","date":"2019-08-06","brev":"面试的时候被问到过Python异步模型的问题，但是当时居然满脑子的go，答得不好。时隔数日回首，如果再给我一次机会，我一定要反问回去：“用Python实现高并发不累吗？？为什么不用go？？” 好吧，今天来好好看一下Python的异步IO用法。","tags":["Python"],"path":"blog/2019/190806-Python异步IO.md"},{"title":"Python代码优化小技巧","date":"2019-07-23","brev":"接上篇面试感悟，在这里把最近在项目中遇到的代码优化案例总结下来。","tags":["Python"],"path":"blog/2019/190723-Python代码优化1.md"},{"title":"记一次面试的感悟","date":"2019-07-22","brev":"一次python岗位面试笔记","tags":["Python","杂谈"],"path":"blog/2019/190722-记一次面试的感悟.md"}],"total":17}