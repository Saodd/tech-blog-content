{"blogs":[{"Title":"Celery源码速读","Date":"2020-06-22","Brev":"【弃坑】Celery是python世界中最主流的异步任务框架。","Tags":["Python","源码","坑"]},{"Title":"Flask框架源代码速读","Date":"2020-06-14","Brev":"Flask作为python世界的三大web框架之一，其轻量简单易拓展的特性使其保有了持久的生命力。它同时也是我目前项目的主要框架。快速阅读了解一下其主要内部实现吧。","Tags":["Python","源码"]},{"Title":"Python面向对象编程","Date":"2019-11-03","Brev":"在面向对象领域还是有不少坑的，成员变量、魔法方法本身并不难，但是与继承结合在一起，就有很多细节需要关注了。在此做个基本的盘点和分析。","Tags":["Python"]},{"Title":"实战项目：价格监视程序","Date":"2019-09-17","Brev":"调用外部REST获取数据，用钉钉推送消息，本地使用Redis保存配置，提供REST接口来修改配置。一个工作日内全部搞定。","Tags":["Golang","Python"]},{"Title":"用正则从邮件中解析数据","Date":"2019-09-16","Brev":"使用正则与协程，高效地解析邮件。","Tags":["Python"]},{"Title":"从邮箱中下载邮件（进阶版）","Date":"2019-09-10","Brev":"开发电子邮件解析工具时，有个很大的麻烦是下载问题。这里提供一个新的思路，将邮件下载下来，保存到本地的某个地方（Mongo）；然后从本地读出来，再进行解析。","Tags":["Python"]},{"Title":"Python协程用法","Date":"2019-08-28","Brev":"协程是Python中比较花哨的一种用法。除了用于异步，还可以用于一些稍微简单的、需要保存函数运行状态的场景。","Tags":["Python"]},{"Title":"Python异步IO","Date":"2019-08-06","Brev":"面试的时候被问到过Python异步模型的问题，但是当时居然满脑子的go，答得不好。时隔数日回首，如果再给我一次机会，我一定要反问回去：“用Python实现高并发不累吗？？为什么不用go？？” 好吧，今天来好好看一下Python的异步IO用法。","Tags":["Python"]},{"Title":"Python代码优化小技巧","Date":"2019-07-23","Brev":"接上篇面试感悟，在这里把最近在项目中遇到的代码优化案例总结下来。","Tags":["Python","优化"]},{"Title":"记一次面试的感悟","Date":"2019-07-22","Brev":"一次python岗位面试笔记","Tags":["Python","杂谈"]}],"total":17}