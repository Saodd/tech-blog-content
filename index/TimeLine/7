{"blogs":[{"title":"LeetCode[53]: 最大子序和","date":"2019-09-05","brev":"简单难度。但是如果没有想清楚其中的规律的话，很难做。","tags":["算法与数据结构"],"path":"blog/2019/190905-LeetCode-53.md"},{"title":"OS学习笔记43：持久化：日志结构的文件系统","date":"2019-09-05","brev":"LFS，就是一种copy-on-write的思想，即任何更新都在新的空间中写入。显著地优化随机写入的性能。","tags":["OS"],"path":"blog/2019/190905-OS学习笔记43.md"},{"title":"OS学习笔记44：持久化：基于闪存的固态硬盘","date":"2019-09-05","brev":"固态硬盘目前有两种介质，flash和DRAM。简单介绍一下它的原理、特征和使用场景。","tags":["OS"],"path":"blog/2019/190905-OS学习笔记44.md"},{"title":"LeetCode[51]: N皇后","date":"2019-09-04","brev":"困难难度。因为在python教程中见到过八皇后问题，所以再做一遍。对于这种经典的问题果然应该不厌其烦啊~","tags":["算法与数据结构"],"path":"blog/2019/190904-LeetCode-51.md"},{"title":"OS学习笔记42：持久化：日志文件系统","date":"2019-09-04","brev":"硬盘在发生故障时，如何保持数据的一致性？借鉴数据库系统的思想，先写日志，是目前的解决方案。","tags":["OS"],"path":"blog/2019/190904-OS学习笔记42.md"},{"title":"OS学习笔记40：持久化：文件系统实现","date":"2019-09-03","brev":"通过讲解一个简化版本的文件系统，来介绍文件系统到底是如何工作的。","tags":["OS"],"path":"blog/2019/190903-OS学习笔记40.md"},{"title":"OS学习笔记41：持久化：快速文件系统","date":"2019-09-03","brev":"FFS是文件系统发展历史中的分水岭，是现代文件系统的祖先。","tags":["OS"],"path":"blog/2019/190903-OS学习笔记41.md"},{"title":"OS学习笔记39：持久化：文件与目录","date":"2019-09-02","brev":"文件、目录的基本结构和用法。","tags":["OS"],"path":"blog/2019/190902-OS学习笔记39.md"},{"title":"LeetCode[50]: Pow(x, n)","date":"2019-08-30","brev":"中等难度。二分法，思路很简单。再加位运算可以很骚~","tags":["算法与数据结构"],"path":"blog/2019/190830-LeetCode-50.md"},{"title":"OS学习笔记38：持久化：冗余磁盘阵列RAID","date":"2019-08-30","brev":"用便宜的磁盘组成阵列~","tags":["OS"],"path":"blog/2019/190830-OS学习笔记38.md"}],"total":176}